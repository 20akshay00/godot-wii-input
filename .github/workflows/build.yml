name: Manual Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 0.1.0
        required: true

env:
  LIBNAME: GDWiiInput
  BUILD_ADDON_DIR: build/addons/gdwiiinput
  ZIP_ADDON_DIR: addons/gdwiiinput

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x86_64
          - os: ubuntu-latest
            platform: linux
            arch: x86_64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq build-essential pkg-config libbluetooth-dev

      - name: Cache godot-cpp
        uses: actions/cache@v4
        with:
          path: godot-cpp
          key: ${{ runner.os }}-godot-cpp

      - name: Cache SCons cache
        uses: actions/cache@v4
        with:
          path: .scons_cache
          key: ${{ runner.os }}-scons-cache-${{ matrix.platform }}-${{ matrix.arch }}

      - name: Build extension
        run: |
          scons target=template_release platform=${{ matrix.platform }} arch=${{ matrix.arch }}

      - name: Organize built libs
        run: |
          mkdir -p ${{ env.BUILD_ADDON_DIR }}/${{ matrix.platform }}
          mv demo/bin/*${{ matrix.platform }}* ${{ env.BUILD_ADDON_DIR }}/${{ matrix.platform }}/ || true
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: ${{ env.BUILD_ADDON_DIR }}

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: build-artifacts

      - name: Copy addon files and built libs
        run: |
          cp -r build/addons/gdwiiinput ./addons/
          cp -r build-artifacts/build/addons/gdwiiinput/* ./addons/gdwiiinput/

      - name: Zip addon
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.LIBNAME }}-zip
          path: GDWiiInput-v${{ github.event.inputs.version }}.zip

      - name: Create zip file
        run: |
          zip -r GDWiiInput-v${{ github.event.inputs.version }}.zip addons/gdwiiinput

      - name: Upload final zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: GDWiiInput
          path: GDWiiInput-v${{ github.event.inputs.version }}.zip

name: Manual Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 0.1
        required: true

env:
  LIBNAME: GDWiiInput
  ADDON_DIR: addons/gdwiiinput

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: windows-release
            os: windows-latest
            target: template_release
            platform: windows
            arch: x86_64
          - identifier: linux-release
            os: ubuntu-latest
            target: template_release
            platform: linux
            arch: x86_64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up SCons
        run: |
          python -m pip install scons
          scons --version

      - name: Install Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config libbluetooth-dev

      - name: Cache godot-cpp
        uses: actions/cache@v4
        with:
          path: godot-cpp
          key: ${{ runner.os }}-godot-cpp-${{ matrix.identifier }}
          restore-keys: |
            ${{ runner.os }}-godot-cpp-

      - name: Compile extension
        run: |
          scons target=${{ matrix.target }} platform=${{ matrix.platform }} arch=${{ matrix.arch }}

      - name: Move built library
        run: |
          mkdir -p ${{ env.ADDON_DIR }}/${{ matrix.platform }}
          mv demo/bin/*${{ matrix.platform }}* ${{ env.ADDON_DIR }}/${{ matrix.platform }}/ || true
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.identifier }}
          path: ${{ env.ADDON_DIR }}

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Assemble final addon
        run: |
          mkdir -p dist/${{ env.ADDON_DIR }}
          cp -r addons/gdwiiinput/* dist/${{ env.ADDON_DIR }}/
          cp -r artifacts/*/${{ env.ADDON_DIR }}/* dist/${{ env.ADDON_DIR }}/

      - name: Zip addon
        uses: vimtor/action-zip@v1
        with:
          files: dist/addons/gdwiiinput
          dest: GDWiiInput-v${{ github.event.inputs.version }}.zip

      - name: Upload final zip
        uses: actions/upload-artifact@v4
        with:
          name: GDWiiInput
          path: GDWiiInput-v${{ github.event.inputs.version }}.zip

name: Builds

on:
  workflow_dispatch:

env:
  LIBNAME: GDWiiInput

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-build
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: windows-debug
            os: windows-latest
            name: Windows Debug
            target: template_debug
            mode: debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            os: windows-latest
            name: Windows Release
            target: template_release
            mode: release
            platform: windows
            arch: x86_64
          - identifier: linux-debug
            os: ubuntu-latest
            name: Linux Debug
            target: template_debug
            mode: debug
            platform: linux
            arch: x86_64
          - identifier: linux-release
            os: ubuntu-latest
            name: Linux Release
            target: template_release
            mode: release
            platform: linux
            arch: x86_64

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Cache SCons and godot-cpp
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            godot-cpp
          key: ${{ runner.os }}-build-${{ hashFiles('scons') }}-${{ hashFiles('godot-cpp/**') }}

      - name: Install SCons
        run: python -m pip install scons

      - name: Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config libbluetooth-dev

      - name: Compile Extension
        run: |
          scons target=${{ matrix.target }} platform=${{ matrix.platform }} arch=${{ matrix.arch }}

      - name: Clean Windows build artifacts
        if: ${{ matrix.platform == 'windows' }}
        run: Remove-Item demo/bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.identifier }}
          path: demo/bin/*

      - name: Archive Release
        if: github.event_name == 'workflow_dispatch'
        uses: thedoctor0/zip-release@v0.7.1
        with:
          type: zip
          filename: '${{ env.LIBNAME }}.${{ matrix.platform }}.${{ matrix.arch }}.zip'
          path: 'demo/bin/'

      - name: Create and upload GitHub Release asset
        if: github.event_name == 'workflow_dispatch'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: '${{ env.LIBNAME }}.${{ matrix.platform }}.${{ matrix.arch }}.zip'
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}